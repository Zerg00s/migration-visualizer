{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://migration-visualizer.com/schemas/migration-concept.json",
  "title": "Migration Concept Definition",
  "description": "Schema for defining migration visualization concepts with embedded data",
  "type": "object",
  "required": ["id", "name", "description", "sourceEnvironment", "targetEnvironment", "objectTypes", "mappings", "data"],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the migration concept",
      "pattern": "^[a-z0-9\\-]+$"
    },
    "name": {
      "type": "string",
      "description": "Display name for the migration concept"
    },
    "description": {
      "type": "string",
      "description": "Description of the migration concept"
    },
    "sourceEnvironment": {
      "$ref": "#/definitions/environment"
    },
    "targetEnvironment": {
      "$ref": "#/definitions/environment"
    },
    "objectTypes": {
      "type": "object",
      "description": "Definition of all object types used in this migration",
      "additionalProperties": {
        "$ref": "#/definitions/objectType"
      }
    },
    "mappings": {
      "type": "array",
      "description": "Transformation rules from source to target",
      "items": {
        "$ref": "#/definitions/mapping"
      }
    },
    "connectionRules": {
      "type": "array",
      "description": "Rules for generating connections between objects",
      "items": {
        "$ref": "#/definitions/connectionRule"
      }
    },
    "data": {
      "type": "object",
      "description": "The actual migration data containing all objects",
      "properties": {
        "_metadata": {
          "type": "object",
          "description": "Optional metadata for the data",
          "properties": {
            "categoryMap": {
              "type": "object",
              "description": "Mapping of field names to display categories",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": {
        "type": "array",
        "description": "Collections of objects",
        "items": {
          "type": "object"
        }
      }
    },
    "customStyles": {
      "type": "string",
      "description": "Custom CSS styles for this migration concept"
    }
  },
  "definitions": {
    "environment": {
      "type": "object",
      "required": ["title", "buckets"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal name for the environment (e.g., 'source' or 'destination')"
        },
        "title": {
          "type": "string",
          "description": "Display title for the environment"
        },
        "description": {
          "type": "string",
          "description": "Optional description of the environment"
        },
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bucket"
          }
        }
      }
    },
    "bucket": {
      "type": "object",
      "required": ["id", "title", "objectType"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique bucket identifier",
          "pattern": "^[a-z\\-]+-[a-z0-9\\-]+$"
        },
        "title": {
          "type": "string",
          "description": "Display title for the bucket"
        },
        "objectType": {
          "type": "string",
          "description": "Reference to objectType that this bucket contains"
        },
        "layout": {
          "type": "object",
          "description": "Optional layout configuration for advanced grid positioning",
          "properties": {
            "gridColumn": {
              "type": "integer",
              "description": "Grid column position (1-based)",
              "minimum": 1
            },
            "gridRow": {
              "type": "integer",
              "description": "Grid row position (1-based)",
              "minimum": 1
            },
            "width": {
              "type": "integer",
              "description": "Width in grid units",
              "default": 1,
              "minimum": 1
            },
            "height": {
              "type": "integer",
              "description": "Height in grid units",
              "default": 1,
              "minimum": 1
            }
          }
        }
      }
    },
    "objectType": {
      "type": "object",
      "required": ["icon", "color", "collection"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name for the object type (optional, can be inferred from key)"
        },
        "pluralName": {
          "type": "string",
          "description": "Plural form of the name (optional)"
        },
        "icon": {
          "type": "string",
          "description": "Font Awesome icon class",
          "pattern": "^(fab?\\s+)?fa-[a-z0-9\\-]+$"
        },
        "color": {
          "type": "string",
          "description": "Hex color code or CSS color variable",
          "pattern": "^(#[0-9A-Fa-f]{6}|var\\(--[a-z\\-]+\\)|#[0-9A-Fa-f]{3})$"
        },
        "collection": {
          "type": "string",
          "description": "Property name in the data object for this collection"
        },
        "idField": {
          "type": "string",
          "default": "id",
          "description": "Field name containing the unique identifier (optional)"
        },
        "nameField": {
          "type": "string",
          "default": "DisplayName",
          "description": "Field name containing the display name (optional)"
        },
        "additionalFields": {
          "type": "array",
          "description": "Additional fields to extract from the data (optional)",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "mapping": {
      "type": "object",
      "required": ["sourceType", "targetType"],
      "properties": {
        "sourceType": {
          "type": "string",
          "description": "Source object type key"
        },
        "targetType": {
          "type": "string",
          "description": "Target object type key"
        },
        "targetBucket": {
          "type": "string",
          "description": "Target bucket ID (optional, can be auto-determined)"
        },
        "transformations": {
          "type": "object",
          "description": "Property transformations during migration",
          "properties": {
            "icon": {
              "type": "string",
              "description": "New icon for the migrated object"
            },
            "color": {
              "type": "string",
              "description": "New color for the migrated object"
            },
            "nameTransform": {
              "type": "string",
              "enum": ["none", "append_migrated", "append_modern", "append_powerapp", "append_flow", "append_onedrive", "custom"],
              "default": "none",
              "description": "How to transform the object name"
            },
            "customTransform": {
              "type": "string",
              "description": "Custom transformation function name (when nameTransform is 'custom')"
            }
          }
        }
      }
    },
    "connectionRule": {
      "type": "object",
      "required": ["type", "from", "to"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Connection type identifier"
        },
        "name": {
          "type": "string",
          "description": "Display name for the connection type"
        },
        "from": {
          "$ref": "#/definitions/connectionEndpoint"
        },
        "to": {
          "$ref": "#/definitions/connectionEndpoint"
        },
        "condition": {
          "type": "string",
          "description": "JavaScript expression to evaluate if connection should be created"
        }
      }
    },
    "connectionEndpoint": {
      "type": "object",
      "required": ["objectType"],
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Object type key for this endpoint"
        },
        "property": {
          "type": "string",
          "description": "Property that contains the reference (for single references)"
        },
        "arrayProperty": {
          "type": "string",
          "description": "Property that contains an array of references"
        }
      }
    }
  }
}
