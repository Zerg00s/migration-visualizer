{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://migration-visualizer.com/schemas/migration-concept.json",
  "title": "Migration Concept Definition",
  "description": "Schema for defining migration visualization concepts with embedded data. CONNECTION RULES EXPLANATION: The connection engine works by looking FROM 'from' objects TO 'to' objects, checking if the 'to' objects contain references to the 'from' objects. Examples: 1) Users own Mailboxes: from: {objectType: 'user'} to: {objectType: 'mailbox', property: 'OwnedBy'} - looks for mailboxes with 'OwnedBy' property containing user IDs. 2) Users are in Groups: from: {objectType: 'user'} to: {objectType: 'group', arrayProperty: 'Members'} - looks for groups with 'Members' array containing user IDs. 3) Teams connect to Security Groups: from: {objectType: 'group'} to: {objectType: 'teams', arrayProperty: 'ConnectedSecurityGroups'} - looks for teams with 'ConnectedSecurityGroups' array containing group IDs.",
  "type": "object",
  "required": ["id", "name", "description", "sourceEnvironment", "targetEnvironment", "objectTypes", "mappings", "data"],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the migration concept",
      "pattern": "^[a-z0-9\\-]+$"
    },
    "name": {
      "type": "string",
      "description": "Display name for the migration concept"
    },
    "description": {
      "type": "string",
      "description": "Description of the migration concept"
    },
    "sourceEnvironment": {
      "$ref": "#/definitions/environment"
    },
    "targetEnvironment": {
      "$ref": "#/definitions/environment"
    },
    "objectTypes": {
      "type": "object",
      "description": "Definition of all object types used in this migration",
      "additionalProperties": {
        "$ref": "#/definitions/objectType"
      }
    },
    "mappings": {
      "type": "array",
      "description": "Transformation rules from source to target",
      "items": {
        "$ref": "#/definitions/mapping"
      }
    },
    "connectionRules": {
      "type": "array",
      "description": "Rules for generating connections between objects. IMPORTANT: The connection engine looks FROM 'from' objects TO 'to' objects by checking if the 'to' objects contain references to the 'from' objects. For example, if Users own Mailboxes, the rule would be from: {objectType: 'user'} to: {objectType: 'mailbox', property: 'OwnedBy'} - meaning look for mailbox objects that have 'OwnedBy' property pointing to user IDs.",
      "items": {
        "$ref": "#/definitions/connectionRule"
      }
    },
    "data": {
      "type": "object",
      "description": "The actual migration data containing all objects. Each collection contains objects that may include the special '_targetBucket' property to override individual object routing during migration.",
      "properties": {
        "_metadata": {
          "type": "object",
          "description": "Optional metadata for the data",
          "properties": {
            "categoryMap": {
              "type": "object",
              "description": "Mapping of field names to display categories",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": {
        "type": "array",
        "description": "Collections of objects. Each object may optionally include a '_targetBucket' property to override the default mapping destination.",
        "items": {
          "$ref": "#/definitions/dataObject"
        }
      }
    },
    "customStyles": {
      "type": "string",
      "description": "Custom CSS styles for this migration concept"
    }
  },
  "definitions": {
    "environment": {
      "type": "object",
      "required": ["title", "buckets"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal name for the environment (e.g., 'source' or 'destination')"
        },
        "title": {
          "type": "string",
          "description": "Display title for the environment"
        },
        "description": {
          "type": "string",
          "description": "Optional description of the environment"
        },
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bucket"
          }
        }
      }
    },
    "bucket": {
      "type": "object",
      "required": ["id", "title", "objectType"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique bucket identifier",
          "pattern": "^[a-z\\-]+-[a-z0-9\\-]+$"
        },
        "title": {
          "type": "string",
          "description": "Display title for the bucket"
        },
        "objectType": {
          "type": "string",
          "description": "Reference to objectType that this bucket contains"
        },
        "layout": {
          "type": "object",
          "description": "Optional layout configuration for advanced grid positioning",
          "properties": {
            "gridColumn": {
              "type": "integer",
              "description": "Grid column position (1-based)",
              "minimum": 1
            },
            "gridRow": {
              "type": "integer",
              "description": "Grid row position (1-based)",
              "minimum": 1
            },
            "width": {
              "type": "integer",
              "description": "Width in grid units",
              "default": 1,
              "minimum": 1
            },
            "height": {
              "type": "integer",
              "description": "Height in grid units",
              "default": 1,
              "minimum": 1
            }
          }
        }
      }
    },
    "objectType": {
      "type": "object",
      "required": ["icon", "color", "collection"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name for the object type (optional, can be inferred from key)"
        },
        "pluralName": {
          "type": "string",
          "description": "Plural form of the name (optional)"
        },
        "icon": {
          "type": "string",
          "description": "Font Awesome icon class",
          "pattern": "^(fa[bsrld]?\\s+)?fa-[a-z0-9\\-]+$"
        },
        "color": {
          "type": "string",
          "description": "Hex color code or CSS color variable",
          "pattern": "^(#[0-9A-Fa-f]{6}|var\\(--[a-z\\-]+\\)|#[0-9A-Fa-f]{3})$"
        },
        "collection": {
          "type": "string",
          "description": "Property name in the data object for this collection"
        },
        "idField": {
          "type": "string",
          "default": "id",
          "description": "Field name containing the unique identifier (optional)"
        },
        "nameField": {
          "type": "string",
          "default": "DisplayName",
          "description": "Field name containing the display name (optional)"
        },
        "additionalFields": {
          "type": "array",
          "description": "Additional fields to extract from the data (optional)",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "mapping": {
      "type": "object",
      "required": ["sourceType", "targetType"],
      "properties": {
        "sourceType": {
          "type": "string",
          "description": "Source object type key"
        },
        "targetType": {
          "type": "string",
          "description": "Target object type key"
        },
        "targetBucket": {
          "type": "string",
          "description": "Target bucket ID (optional, can be auto-determined)"
        },
        "transformations": {
          "type": "object",
          "description": "Property transformations during migration",
          "properties": {
            "icon": {
              "type": "string",
              "description": "New icon for the migrated object"
            },
            "color": {
              "type": "string",
              "description": "New color for the migrated object"
            },
            "nameTransform": {
              "type": "string",
              "enum": ["none", "append_migrated", "append_modern", "append_powerapp", "append_flow", "append_onedrive", "custom"],
              "default": "none",
              "description": "How to transform the object name"
            },
            "customTransform": {
              "type": "string",
              "description": "Custom transformation function name (when nameTransform is 'custom')"
            }
          }
        }
      }
    },
    "connectionRule": {
      "type": "object",
      "required": ["type", "from", "to"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Connection type identifier (e.g., 'ownership', 'membership', 'association')"
        },
        "name": {
          "type": "string",
          "description": "Display name for the connection type"
        },
        "from": {
          "$ref": "#/definitions/connectionEndpoint",
          "description": "Starting point of the connection - the engine looks FROM this object type"
        },
        "to": {
          "$ref": "#/definitions/connectionEndpoint",
          "description": "Target of the connection - the engine looks for references TO the 'from' objects in these objects"
        },
        "condition": {
          "type": "string",
          "description": "Optional JavaScript expression to evaluate if connection should be created"
        }
      }
    },
    "dataObject": {
      "type": "object",
      "description": "A data object within a collection that can be migrated and visualized",
      "required": ["id"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this object"
        },
        "DisplayName": {
          "type": "string",
          "description": "Human-readable display name for this object"
        },
        "_targetBucket": {
          "type": "string",
          "description": "OBJECT-LEVEL ROUTING OVERRIDE: Optional property to specify which destination bucket this specific object should migrate to, overriding the global mapping. Must match a valid bucket ID from the targetEnvironment. This allows individual objects within the same source bucket to migrate to different destination buckets. Example: While most Google Drives migrate to OneDrive, a specific drive with '_targetBucket': 'destination-sharepoint-online' will migrate to SharePoint Online instead.",
          "pattern": "^[a-z\\-]+-[a-z0-9\\-]+$"
        }
      },
      "additionalProperties": true
    },
    "connectionEndpoint": {
      "type": "object",
      "required": ["objectType"],
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Object type key for this endpoint"
        },
        "property": {
          "type": "string",
          "description": "Property that contains a single reference to the 'from' object ID (e.g., 'OwnedBy': 'user_1'). Only used in 'to' endpoints."
        },
        "arrayProperty": {
          "type": "string",
          "description": "Property that contains an array of references to 'from' object IDs (e.g., 'Members': ['user_1', 'user_2']). Only used in 'to' endpoints."
        }
      },
      "additionalProperties": false
    }
  }
}
